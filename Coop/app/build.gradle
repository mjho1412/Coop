apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

apply plugin: 'ivonhoe.dexguard'
dexguard {
    guardConfig = "${rootDir}/map.txt"
}

def getVersionCodeTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyMMddHHmm')
    def code = formattedDate.toBigInteger()
    println sprintf("VersionCode: %d", code)
    return code
}

def config = rootProject.ext.configuration

android {
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionName config.versionName

        versionCode getVersionCodeTimestamp()

        renderscriptTargetApi config.targetSdkVersion
        renderscriptSupportModeEnabled true


        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14 -frtti -fexceptions"
            }
        }
    }
    flavorDimensions "mode"


    signingConfigs {
        debug {
            storeFile file("../../publish/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile file("../../publish/release.keystore")
            storePassword KEYSTORE_PASSWORD
            keyAlias 'travinh'
            keyPassword KEY_PASSWORD
        }
    }

    productFlavors {
//        customer {
//            applicationId "com.hb.travinh"
//            resValue "string", "app_name", "Aber"
//            manifestPlaceholders = [appName: "com.hb.aber.ui.splash.SplashActivity"]
//            manifestPlaceholders = [icon_app: "@drawable/logo_rider_new"]
//        }
//        driver {
//            applicationId "com.hb.travinh"
//            resValue "string", "app_name", "Aber Driver"
//            manifestPlaceholders = [appName: "com.hb.aber.ui.splash.SplashActivity"]
//            manifestPlaceholders = [icon_app: "@drawable/logo_driver_new"]
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date()
                    def formattedDate = date.format('yyyyMMdd_HHmm')
                    outputFileName = outputFileName.replace(".apk", "-${formattedDate}.apk")
                }
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug

        }
    }

    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        abortOnError false
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    androidExtensions {
        experimental = true
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.core:core-ktx:1.0.1"
    implementation 'androidx.annotation:annotation:1.0.1'
    implementation 'com.google.android.material:material:1.0.0'

    // Test
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Library Mvp
    implementation 'com.github.haibthe:lib.utils:1.0.2'
    implementation 'com.github.haibthe:lib.mvp:1.0.2'
    implementation 'com.github.haibthe:lib.mvp.impl:1.0.5'


    //
    api project(":protobuf_model")
    api project(":ui.widget")
    api project(":lib.map")

    // Butter Knife 8.8.1
    implementation 'com.jakewharton:butterknife:10.0.0'
    kapt 'com.jakewharton:butterknife-compiler:10.0.0'
    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    // Gson
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.vincentbrison.openlibraries.android:dualcache:3.0.0'
    // Dagger
    implementation 'com.google.dagger:dagger-android:2.15'
    implementation 'com.google.dagger:dagger-android-support:2.15'
    kapt 'com.google.dagger:dagger-compiler:2.15'
    kapt 'com.google.dagger:dagger-android-processor:2.16'
    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.12'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // Network
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    // FrontEnd
    implementation 'com.github.prolificinteractive:material-calendarview:2.0.0'
//    implementation 'com.github.Kunzisoft:Android-SwitchDateTimePicker:2.0'
    implementation 'com.github.florent37:shapeofview:1.3.2'
    implementation 'br.com.simplepass:loading-button-android:1.14.0'
    implementation "com.tapadoo.android:alerter:3.0.1"
    implementation 'com.mlsdev.rximagepicker:library:2.1.5'
//    implementation 'com.github.searchy2:CustomPermissionsDialogue:2.0.1'
    implementation 'com.afollestad:material-cab:1.3.1'

    implementation 'me.dm7.barcodescanner:zxing:1.9.8'

    //
    implementation 'commons-codec:commons-codec:1.10'

    // Google
    implementation 'com.google.android.gms:play-services-gcm:16.0.0'
    implementation "com.google.android.gms:play-services-location:16.0.0"

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.7'
}

apply plugin: 'com.google.gms.google-services'
